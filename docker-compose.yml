version: '3.9'
services:
  rest_api:
    container_name: tabungan_container
    image: rest-api:1.0.0
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    depends_on:
      - postgres
      - rabbitmq
    environment:
      MYAPP_DB_HOST: $MYAPP_DB_HOST
      MYAPP_DB_PORT: $MYAPP_DB_PORT
      MYAPP_DB_USER: $MYAPP_DB_USER
      MYAPP_DB_PASSWORD: $MYAPP_DB_PASSWORD
      MYAPP_DB_NAME: $MYAPP_DB_NAME
      MYAPP_RABBITMQ_HOST: $MYAPP_RABBITMQ_HOST
      MYAPP_RABBITMQ_PORT: $MYAPP_RABBITMQ_PORT
      MYAPP_RABBITMQ_USER: $MYAPP_RABBITMQ_USER
      MYAPP_RABBITMQ_PASSWORD: $MYAPP_RABBITMQ_PASSWORD
      MYAPP_RABBITMQ_VHOST: $MYAPP_RABBITMQ_VHOST
    restart: always
    networks:
      - network

  postgres:
    container_name: postgres_container
    image: postgres:11.21-alpine3.17
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - network

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.12.6-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
      RABBITMQ_DEFAULT_VHOST: $RABBITMQ_DEFAULT_VHOST
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  postgres_data:  
  rabbitmq_data:   
